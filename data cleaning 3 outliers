{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"data cleaning 3 outliers","provenance":[],"authorship_tag":"ABX9TyML4h8Ps+3WLWKARgdbMIzD"},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"code","metadata":{"id":"oYbp2qkz4ymM","colab_type":"code","colab":{}},"source":["import matplotlib.pyplot as plt\n","import numpy as np \n","import pandas as pd\n","from sqlalchemy import create_engine\n","import warnings\n","\n","warnings.filterwarnings('ignore')"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"AI87OT89J1do","colab_type":"code","colab":{}},"source":["postgres_user = 'dsbc_student'\n","postgres_pw = '7*.8G9QH21'\n","postgres_host = '142.93.121.174'\n","postgres_port = '5432'\n","postgres_db = 'useducation'\n","\n","engine = create_engine('postgresql://{}:{}@{}:{}/{}'.format(\n","    postgres_user, postgres_pw, postgres_host, postgres_port, postgres_db))\n","\n","edu_data = pd.read_sql_query('select * from useducation', con=engine)\n","engine.dispose()"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"YKTY60aLK0VV","colab_type":"code","outputId":"daf94ea8-4e45-4916-fc8e-a0b25ed17b5d","executionInfo":{"status":"ok","timestamp":1587159306873,"user_tz":240,"elapsed":219,"user":{"displayName":"John Adrian","photoUrl":"","userId":"13588824724860820714"}},"colab":{"base_uri":"https://localhost:8080/","height":554}},"source":["fill_list = []\n","edu_data2 = edu_data.copy()\n","\n","for col in edu_data:\n","  if edu_data[col].dtypes == 'float64':\n","    fill_list.append(col)\n","\n","\n","for col in fill_list:\n","  edu_data2.loc[:,col] = edu_data2.loc[:,col].interpolate()\n","\n","edu_data2.info()\n","\n"],"execution_count":7,"outputs":[{"output_type":"stream","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 1492 entries, 0 to 1491\n","Data columns (total 25 columns):\n"," #   Column                        Non-Null Count  Dtype  \n","---  ------                        --------------  -----  \n"," 0   PRIMARY_KEY                   1492 non-null   object \n"," 1   STATE                         1492 non-null   object \n"," 2   YEAR                          1492 non-null   int64  \n"," 3   ENROLL                        1456 non-null   float64\n"," 4   TOTAL_REVENUE                 1492 non-null   float64\n"," 5   FEDERAL_REVENUE               1492 non-null   float64\n"," 6   STATE_REVENUE                 1492 non-null   float64\n"," 7   LOCAL_REVENUE                 1492 non-null   float64\n"," 8   TOTAL_EXPENDITURE             1492 non-null   float64\n"," 9   INSTRUCTION_EXPENDITURE       1492 non-null   float64\n"," 10  SUPPORT_SERVICES_EXPENDITURE  1492 non-null   float64\n"," 11  OTHER_EXPENDITURE             1456 non-null   float64\n"," 12  CAPITAL_OUTLAY_EXPENDITURE    1492 non-null   float64\n"," 13  GRADES_PK_G                   1492 non-null   float64\n"," 14  GRADES_KG_G                   1492 non-null   float64\n"," 15  GRADES_4_G                    1492 non-null   float64\n"," 16  GRADES_8_G                    1492 non-null   float64\n"," 17  GRADES_12_G                   1492 non-null   float64\n"," 18  GRADES_1_8_G                  1492 non-null   float64\n"," 19  GRADES_9_12_G                 1492 non-null   float64\n"," 20  GRADES_ALL_G                  1492 non-null   float64\n"," 21  AVG_MATH_4_SCORE              1492 non-null   float64\n"," 22  AVG_MATH_8_SCORE              1492 non-null   float64\n"," 23  AVG_READING_4_SCORE           1492 non-null   float64\n"," 24  AVG_READING_8_SCORE           1491 non-null   float64\n","dtypes: float64(22), int64(1), object(2)\n","memory usage: 291.5+ KB\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"9FKjvynBLlUl","colab_type":"code","outputId":"a56bce22-de7a-40e1-dd70-fd67f1166e2d","executionInfo":{"status":"ok","timestamp":1587159310750,"user_tz":240,"elapsed":636,"user":{"displayName":"John Adrian","photoUrl":"","userId":"13588824724860820714"}},"colab":{"base_uri":"https://localhost:8080/","height":366}},"source":["# Consider the two variables: TOTAL_REVENUE and TOTAL_EXPENDITURE. Do these variables have outlier values?\n","\n","plt.figure(figsize = (15,5))\n","\n","plt.subplot(1,2,1)\n","plt.hist(edu_data2['TOTAL_REVENUE'])\n","plt.title('Total Revenue Distribution')\n","\n","plt.subplot(1,2,2)\n","plt.hist(edu_data2['TOTAL_EXPENDITURE'], color = 'green')\n","plt.title('Total Expenditure Distribution')\n","\n","# From the graphs we can see that both of these variables have outliers\n"],"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Text(0.5, 1.0, 'Total Expenditure Distribution')"]},"metadata":{"tags":[]},"execution_count":8},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 1080x360 with 2 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"jJzRovQkNSzz","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":1000},"outputId":"6a09d992-93cc-45a8-83a4-2197cc4f3557","executionInfo":{"status":"ok","timestamp":1587160693256,"user_tz":240,"elapsed":723,"user":{"displayName":"John Adrian","photoUrl":"","userId":"13588824724860820714"}}},"source":["from scipy.stats import zscore\n","\n","#next we will take a statistical approach\n","\n","def zscore_threshold(z_scores):\n","  for threshold in range(1,5):\n","    print('The threshold is: {}'.format(threshold))\n","    print('The indices of the outliers:')\n","    print(np.where(z_scores > threshold))\n","\n","#find outliers using zscores and thresholds\n","revenue_zscores = zscore(edu_data2['TOTAL_REVENUE'])\n","expenditure_zscores = zscore(edu_data2['TOTAL_EXPENDITURE'])\n","\n","print(revenue_zscores) \n","zscore_threshold(revenue_zscores)\n","\n","print(expenditure_zscores)\n","zscore_threshold(expenditure_zscores)\n","\n","#find outliers using turkeys method (interquartile range)\n","def turkeys_method(data):\n","  q75 = np.percentile(data, 75)\n","  q25 = np.percentile(data, 25)\n","  iqr = q75 - q25\n","  for threshold in np.arange(1,5,.5):\n","    min_val = q25 - (iqr * threshold)\n","    max_val = q75 + (iqr * threshold)\n","    print('The threshold is: {}'.format(threshold))\n","    print(\"Number of outliers is: {}\".format(len((np.where((data > max_val) | (data < min_val))[0]))))\n","\n","turkeys_method(edu_data2['TOTAL_REVENUE'])\n","turkeys_method(edu_data2['TOTAL_EXPENDITURE'])\n","\n","\n","\n"],"execution_count":9,"outputs":[{"output_type":"stream","text":["[-0.7028748  -0.83867729 -0.65459868 ...  1.05479123  1.05479123\n","  1.05479123]\n","The threshold is: 1\n","The indices of the outliers:\n","(array([   4,   56,  108,  137,  150,  161,  190,  213,  241,  264,  292,\n","        316,  344,  355,  367,  396,  407,  420,  449,  460,  472,  481,\n","        501,  512,  524,  552,  564,  576,  605,  616,  628,  656,  668,\n","        680,  685,  708,  719,  731,  737,  758,  760,  766,  771,  784,\n","        789,  793,  811,  813,  819,  824,  836,  842,  846,  863,  865,\n","        871,  876,  891,  897,  901,  919,  921,  927,  932,  944,  950,\n","        954,  971,  973,  976,  979,  984,  997, 1002, 1006, 1023, 1025,\n","       1028, 1031, 1036, 1048, 1053, 1057, 1075, 1077, 1083, 1088, 1101,\n","       1106, 1110, 1127, 1129, 1135, 1140, 1152, 1157, 1161, 1178, 1180,\n","       1183, 1186, 1191, 1203, 1208, 1212, 1229, 1231, 1234, 1237, 1242,\n","       1254, 1259, 1263, 1280, 1282, 1285, 1286, 1287, 1288, 1289, 1290,\n","       1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301,\n","       1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312,\n","       1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323,\n","       1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334,\n","       1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345,\n","       1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356,\n","       1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367,\n","       1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378,\n","       1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389,\n","       1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400,\n","       1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411,\n","       1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422,\n","       1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433,\n","       1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444,\n","       1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455,\n","       1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466,\n","       1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477,\n","       1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488,\n","       1489, 1490, 1491]),)\n","The threshold is: 2\n","The indices of the outliers:\n","(array([ 264,  316,  367,  420,  472,  481,  524,  552,  576,  605,  616,\n","        628,  656,  668,  680,  708,  719,  731,  760,  771,  784,  813,\n","        824,  836,  865,  876,  891,  921,  932,  944,  973,  984,  997,\n","       1025, 1036, 1048, 1077, 1088, 1101, 1129, 1140, 1152, 1180, 1191,\n","       1203, 1231, 1242, 1254, 1282]),)\n","The threshold is: 3\n","The indices of the outliers:\n","(array([ 472,  481,  524,  576,  628,  680,  731,  784,  813,  836,  865,\n","        891,  921,  932,  944,  973,  984,  997, 1025, 1036, 1048, 1077,\n","       1088, 1101, 1129, 1140, 1152, 1180, 1191, 1203, 1231, 1242, 1254,\n","       1282]),)\n","The threshold is: 4\n","The indices of the outliers:\n","(array([ 576,  628,  680,  731,  784,  836,  891,  944,  997, 1048, 1101,\n","       1129, 1152, 1180, 1203, 1231, 1254, 1282]),)\n","[-0.7004748  -0.83919369 -0.63877798 ...  1.00730253  1.00730253\n","  1.00730253]\n","The threshold is: 1\n","The indices of the outliers:\n","(array([   4,   56,   85,  137,  150,  161,  190,  213,  241,  264,  292,\n","        304,  316,  344,  355,  367,  396,  407,  420,  449,  460,  472,\n","        481,  501,  512,  524,  552,  564,  576,  605,  616,  628,  656,\n","        668,  680,  685,  708,  719,  731,  737,  758,  760,  766,  771,\n","        784,  789,  793,  811,  813,  819,  824,  836,  842,  846,  863,\n","        865,  871,  876,  891,  897,  901,  919,  921,  927,  932,  944,\n","        950,  954,  971,  973,  979,  984,  997, 1002, 1006, 1023, 1025,\n","       1031, 1036, 1048, 1053, 1057, 1075, 1077, 1083, 1088, 1101, 1106,\n","       1110, 1127, 1129, 1135, 1140, 1152, 1157, 1161, 1178, 1180, 1186,\n","       1191, 1203, 1208, 1212, 1229, 1231, 1237, 1242, 1254, 1259, 1263,\n","       1280, 1282, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293,\n","       1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304,\n","       1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315,\n","       1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326,\n","       1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337,\n","       1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348,\n","       1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359,\n","       1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370,\n","       1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381,\n","       1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392,\n","       1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403,\n","       1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414,\n","       1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425,\n","       1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436,\n","       1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447,\n","       1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458,\n","       1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469,\n","       1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480,\n","       1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491]),)\n","The threshold is: 2\n","The indices of the outliers:\n","(array([ 316,  367,  420,  472,  481,  501,  524,  552,  564,  576,  605,\n","        616,  628,  656,  668,  680,  708,  719,  731,  760,  771,  784,\n","        813,  824,  836,  865,  876,  891,  921,  932,  944,  973,  984,\n","        997, 1025, 1036, 1048, 1077, 1088, 1101, 1129, 1140, 1152, 1180,\n","       1191, 1203, 1231, 1242, 1254, 1282]),)\n","The threshold is: 3\n","The indices of the outliers:\n","(array([ 472,  481,  524,  576,  628,  680,  731,  760,  784,  813,  836,\n","        865,  876,  891,  921,  932,  944,  973,  984,  997, 1025, 1036,\n","       1048, 1077, 1088, 1101, 1129, 1140, 1152, 1180, 1191, 1203, 1231,\n","       1242, 1254, 1282]),)\n","The threshold is: 4\n","The indices of the outliers:\n","(array([ 576,  628,  680,  731,  784,  836,  891,  944,  973,  997, 1048,\n","       1077, 1101, 1129, 1152, 1180, 1203, 1231, 1254, 1282]),)\n","The threshold is: 1.0\n","Number of outliers is: 50\n","The threshold is: 1.5\n","Number of outliers is: 40\n","The threshold is: 2.0\n","Number of outliers is: 33\n","The threshold is: 2.5\n","Number of outliers is: 21\n","The threshold is: 3.0\n","Number of outliers is: 12\n","The threshold is: 3.5\n","Number of outliers is: 6\n","The threshold is: 4.0\n","Number of outliers is: 1\n","The threshold is: 4.5\n","Number of outliers is: 1\n","The threshold is: 1.0\n","Number of outliers is: 52\n","The threshold is: 1.5\n","Number of outliers is: 42\n","The threshold is: 2.0\n","Number of outliers is: 35\n","The threshold is: 2.5\n","Number of outliers is: 23\n","The threshold is: 3.0\n","Number of outliers is: 14\n","The threshold is: 3.5\n","Number of outliers is: 6\n","The threshold is: 4.0\n","Number of outliers is: 1\n","The threshold is: 4.5\n","Number of outliers is: 0\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"mAI-dV8APA4m","colab_type":"code","outputId":"568d8624-8465-4784-d935-b83f73754193","executionInfo":{"status":"ok","timestamp":1587160739089,"user_tz":240,"elapsed":1384,"user":{"displayName":"John Adrian","photoUrl":"","userId":"13588824724860820714"}},"colab":{"base_uri":"https://localhost:8080/","height":1000}},"source":["# If you detect outliers in the TOTAL_REVENUE and TOTAL_EXPENDITURE variables, apply the techniques you learned in this checkpoint to eliminate them and \n","# validate that there's no outlier values after you handled them.\n","from scipy.stats.mstats import winsorize\n","\n","#using windsor method\n","winsor_revenue = winsorize(edu_data2['TOTAL_REVENUE'], (0,.1))\n","winsor_expenditure = winsorize(edu_data2['TOTAL_EXPENDITURE'], (0,.1))\n","\n","plt.figure(figsize = (15,5))\n","\n","plt.subplot(1,2,1)\n","plt.boxplot(winsor_revenue)\n","plt.title('Winsorized Revenue')\n","\n","plt.subplot(1,2,2)\n","plt.boxplot(winsor_expenditure)\n","plt.title('Winsorized Expenditure')\n","\n","plt.show()\n","# Simple observation of the box plots shows there are no outliers\n","\n","#using transormation method\n","def display_transorm(data):\n","  plt.figure(figsize= (15,5))\n","  plt.subplot(1,2,1)\n","  plt.hist(data)\n","  plt.title('Original data')\n","  plt.subplot(1,2,2)\n","  plt.hist(np.log(data))\n","  plt.title('Transformed data')\n","  turkeys_method(np.log(data))\n","\n","display_transorm(edu_data2['TOTAL_REVENUE'])\n","display_transorm(edu_data2['TOTAL_EXPENDITURE'])"],"execution_count":10,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 1080x360 with 2 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}},{"output_type":"stream","text":["The threshold is: 1.0\n","Number of outliers is: 0\n","The threshold is: 1.5\n","Number of outliers is: 0\n","The threshold is: 2.0\n","Number of outliers is: 0\n","The threshold is: 2.5\n","Number of outliers is: 0\n","The threshold is: 3.0\n","Number of outliers is: 0\n","The threshold is: 3.5\n","Number of outliers is: 0\n","The threshold is: 4.0\n","Number of outliers is: 0\n","The threshold is: 4.5\n","Number of outliers is: 0\n","The threshold is: 1.0\n","Number of outliers is: 0\n","The threshold is: 1.5\n","Number of outliers is: 0\n","The threshold is: 2.0\n","Number of outliers is: 0\n","The threshold is: 2.5\n","Number of outliers is: 0\n","The threshold is: 3.0\n","Number of outliers is: 0\n","The threshold is: 3.5\n","Number of outliers is: 0\n","The threshold is: 4.0\n","Number of outliers is: 0\n","The threshold is: 4.5\n","Number of outliers is: 0\n"],"name":"stdout"},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 1080x360 with 2 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}},{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 1080x360 with 2 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"gEDzO1chacwJ","colab_type":"code","outputId":"ef29f845-c304-48a2-d2d0-9b866c666062","executionInfo":{"status":"ok","timestamp":1586965340018,"user_tz":240,"elapsed":844,"user":{"displayName":"John Adrian","photoUrl":"","userId":"13588824724860820714"}},"colab":{"base_uri":"https://localhost:8080/","height":286}},"source":["'''\n","Create another variable by subtracting the original TOTAL_EXPENDITURE from TOTAL_REVENUE (before you eliminated the outliers). \n","You can think of it as a kind of budget deficit in education. Do you find any outlier values in this new variable? \n","If so, eliminate them using the technique you think most suitable.\n","'''\n","\n","surplus = edu_data2['TOTAL_REVENUE'] - edu_data2['TOTAL_EXPENDITURE']\n","\n","#find outliers\n","turkeys_method(surplus)\n","\n","winsor_surplus_1 = winsorize(surplus, (0,.1))"],"execution_count":0,"outputs":[{"output_type":"stream","text":["The threshold is: 1.0\n","Number of outliers is: 198\n","The threshold is: 1.5\n","Number of outliers is: 129\n","The threshold is: 2.0\n","Number of outliers is: 101\n","The threshold is: 2.5\n","Number of outliers is: 82\n","The threshold is: 3.0\n","Number of outliers is: 67\n","The threshold is: 3.5\n","Number of outliers is: 52\n","The threshold is: 4.0\n","Number of outliers is: 43\n","The threshold is: 4.5\n","Number of outliers is: 38\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"NzEVwA8qbk8L","colab_type":"code","outputId":"14fff4d0-8767-4545-e962-f7638e2a1b26","executionInfo":{"status":"ok","timestamp":1586965182280,"user_tz":240,"elapsed":578,"user":{"displayName":"John Adrian","photoUrl":"","userId":"13588824724860820714"}},"colab":{"base_uri":"https://localhost:8080/","height":286}},"source":["'''\n","we create another variable by subtracting the TOTAL_EXPENDITURE from TOTAL_REVENUE. This time, use the outlier eliminated versions of TOTAL_EXPENDITURE from TOTAL_REVENUE. \n","In this newly created variable, can you find any outliers? If so, eliminate them.\n","'''\n","\n","winsor_diff = winsor_revenue - winsor_expenditure\n","turkeys_method(winsor_diff)\n","\n","winsor_surplus_2 = winsorize(winsor_diff, (.1,.1))\n","\n","\n"],"execution_count":0,"outputs":[{"output_type":"stream","text":["The threshold is: 1.0\n","Number of outliers is: 57\n","The threshold is: 1.5\n","Number of outliers is: 26\n","The threshold is: 2.0\n","Number of outliers is: 14\n","The threshold is: 2.5\n","Number of outliers is: 10\n","The threshold is: 3.0\n","Number of outliers is: 3\n","The threshold is: 3.5\n","Number of outliers is: 2\n","The threshold is: 4.0\n","Number of outliers is: 2\n","The threshold is: 4.5\n","Number of outliers is: 0\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"N3kyYHSofvSr","colab_type":"code","outputId":"e477ee2c-9bab-47f8-caac-81080637f4a3","executionInfo":{"status":"ok","timestamp":1586965395709,"user_tz":240,"elapsed":518,"user":{"displayName":"John Adrian","photoUrl":"","userId":"13588824724860820714"}},"colab":{"base_uri":"https://localhost:8080/","height":284}},"source":["pd.DataFrame({'Original Surplus': surplus, 'Winsor Surplus 1': winsor_surplus_1, 'Winsor Surplus 2':winsor_surplus_2 }).describe()"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Original Surplus</th>\n","      <th>Winsor Surplus 1</th>\n","      <th>Winsor Surplus 2</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>1.492000e+03</td>\n","      <td>1.492000e+03</td>\n","      <td>1492.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>-3.209622e+04</td>\n","      <td>-5.491736e+04</td>\n","      <td>76207.276139</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>5.607748e+05</td>\n","      <td>5.168915e+05</td>\n","      <td>237336.783332</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>-5.487742e+06</td>\n","      <td>-5.487742e+06</td>\n","      <td>-273298.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>-1.368148e+05</td>\n","      <td>-1.368148e+05</td>\n","      <td>-84227.250000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>-5.355000e+02</td>\n","      <td>-5.355000e+02</td>\n","      <td>2555.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>1.876285e+05</td>\n","      <td>1.876285e+05</td>\n","      <td>414013.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>3.897129e+06</td>\n","      <td>4.140130e+05</td>\n","      <td>414013.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["       Original Surplus  Winsor Surplus 1  Winsor Surplus 2\n","count      1.492000e+03      1.492000e+03       1492.000000\n","mean      -3.209622e+04     -5.491736e+04      76207.276139\n","std        5.607748e+05      5.168915e+05     237336.783332\n","min       -5.487742e+06     -5.487742e+06    -273298.000000\n","25%       -1.368148e+05     -1.368148e+05     -84227.250000\n","50%       -5.355000e+02     -5.355000e+02       2555.000000\n","75%        1.876285e+05      1.876285e+05     414013.000000\n","max        3.897129e+06      4.140130e+05     414013.000000"]},"metadata":{"tags":[]},"execution_count":73}]}]}